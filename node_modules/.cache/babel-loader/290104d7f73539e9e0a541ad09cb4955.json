{"ast":null,"code":"var _jsxFileName = \"/Users/kristinedugan/repos/tic-tac-toe-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport Square from './Component/Square';\nimport { Patterns } from './Patterns';\nimport WinnerScreen from \"./WinnerScreen\"; //game sounds initialize\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst click = new Audio('./click.mp3');\nconst gameWinnerSound = new Audio('./win.wav');\nconst restartSound = new Audio('./restart.wav'); //game sound functions\n\nconst clickPlay = () => {\n  click.play();\n};\n\nconst gameWinner = () => {\n  gameWinnerSound.play();\n};\n\nconst gameRestart = () => {\n  restartSound.play();\n};\n\nfunction App() {\n  _s();\n\n  //board index for squares\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]); //player turn to ⭕ or ❌\n\n  const [player, setPlayer] = useState(\"⭕\");\n  const [gameState, setGameState] = React.useState([]); //result\n\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  }); // check win\n\n  const [win, setWin] = useState(false);\n  useEffect(() => {\n    // use when board changes\n    checkWin();\n    checkIfTie();\n\n    if (player === \"❌\") {\n      setPlayer(\"⭕\");\n    } else {\n      setPlayer(\"❌\");\n    }\n  }, [board]); //render winner\n\n  useEffect(() => {\n    if (result.state !== \"none\") {\n      setWin(true);\n      gameWinner(); // alert(`Game Finished! Winning Player: ${result.winner}`);\n    }\n  }, [result]); //handle click\n\n  const handleClick = square => {\n    clickPlay();\n    setBoard(board.map((val, idx) => {\n      if (idx === square && val === \"\") {\n        return player;\n      }\n\n      return val;\n    }));\n  }; // checking for winner\n\n\n  const checkWin = () => {\n    Patterns.forEach(currPattern => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer === \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach(idx => {\n        if (board[idx] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({\n          winner: player,\n          state: \"Won\"\n        });\n      }\n    });\n  }; //restart\n\n\n  const restartGame = () => {\n    gameRestart();\n    setBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayer(\"⭕\");\n    setWin(false);\n  }; //check if tie\n\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach(square => {\n      if (square === \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({\n        winner: \"No One\",\n        state: \"Tie\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Let's Play Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(0);\n          },\n          val: board[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(1);\n          },\n          val: board[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(2);\n          },\n          val: board[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(3);\n          },\n          val: board[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(4);\n          },\n          val: board[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(5);\n          },\n          val: board[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(6);\n          },\n          val: board[6]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(7);\n          },\n          val: board[7]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          chooseSquare: () => {\n            handleClick(8);\n          },\n          val: board[8]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Turn:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }, this), win ? /*#__PURE__*/_jsxDEV(WinnerScreen, {\n      restartGame: restartGame,\n      playerWon: result.winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kPs/el6fUWPkAXLbU1fgBABAQNw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Square","Patterns","WinnerScreen","click","Audio","gameWinnerSound","restartSound","clickPlay","play","gameWinner","gameRestart","App","board","setBoard","player","setPlayer","gameState","setGameState","React","result","setResult","winner","state","win","setWin","checkWin","checkIfTie","handleClick","square","map","val","idx","forEach","currPattern","firstPlayer","foundWinningPattern","restartGame","filled"],"sources":["/Users/kristinedugan/repos/tic-tac-toe-game/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\nimport Square from './Component/Square';\nimport {Patterns} from './Patterns'\nimport WinnerScreen from \"./WinnerScreen\";\n\n//game sounds initialize\nconst click = new Audio('./click.mp3')\nconst gameWinnerSound = new Audio('./win.wav')\nconst restartSound = new Audio('./restart.wav')\n\n//game sound functions\nconst clickPlay = () => {\n  click.play()\n}\nconst gameWinner = () => {\n  gameWinnerSound.play()\n}\nconst gameRestart = () => {\n  restartSound.play()\n}\n\nfunction App() {\n  //board index for squares\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"])\n  //player turn to ⭕ or ❌\n  const[player, setPlayer] = useState(\"⭕\")\n  const [gameState, setGameState] = React.useState([]);\n  //result\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n  // check win\n  const [win, setWin] = useState(false);\n\n  useEffect(() => { // use when board changes\n    checkWin()\n    checkIfTie()\n\n    if (player === \"❌\") {\n      setPlayer(\"⭕\");\n    } else {\n      setPlayer(\"❌\");\n    }\n  }, [board]);\n\n  //render winner\n  useEffect(() => {\n    \n    if (result.state !== \"none\") {\n      setWin(true);\n      gameWinner();\n            // alert(`Game Finished! Winning Player: ${result.winner}`);\n    }\n  }, [result]);\n\n  //handle click\n  const handleClick =(square) => {\n    clickPlay()\n    setBoard(\n      board.map((val, idx) => {\n        if (idx === square && val === \"\") {\n          return player; \n        }\n        return val; \n      })\n    );\n  }\n\n  // checking for winner\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer === \"\") return; \n      let foundWinningPattern = true;\n      currPattern.forEach((idx) => {\n        if (board[idx] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: \"Won\" });\n      }\n    });\n  };\n\n  //restart\n  const restartGame = () => {\n    gameRestart()\n    setBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayer(\"⭕\");\n    setWin(false)\n  };\n\n  //check if tie\n  const checkIfTie = () => {\n    let filled = true; \n    board.forEach((square) => {\n      if (square === \"\") {\n        filled = false; \n      }\n    });\n    if (filled) {\n      setResult({ winner: \"No One\", state: \"Tie\" });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n     <div className=\"board\">\n      <h1 className=\"title\">Let's Play Tic Tac Toe</h1>\n       <div className=\"row\">\n        <Square \n        chooseSquare={()=>{handleClick(0)}}\n        val={board[0]}/>\n        <Square \n        chooseSquare={()=>{handleClick(1)}}\n        val={board[1]}/>\n        <Square \n        chooseSquare={()=>{handleClick(2)}}\n        val={board[2]}/>\n       </div>\n       <div className=\"row\">\n       <Square \n        chooseSquare={()=>{handleClick(3)}}\n        val={board[3]}/>\n        <Square \n        chooseSquare={()=>{handleClick(4)}}\n        val={board[4]}/>\n        <Square \n        chooseSquare={()=>{handleClick(5)}}\n        val={board[5]}/>\n       </div>\n       <div className=\"row\">\n       <Square \n        chooseSquare={()=>{handleClick(6)}}\n        val={board[6]}/>\n        <Square \n        chooseSquare={()=>{handleClick(7)}}\n        val={board[7]}/>\n        <Square \n        chooseSquare={()=>{handleClick(8)}}\n        val={board[8]}/>\n       </div>\n       <div>\n         <h1 className=\"title\">Turn:</h1></div>\n     </div>\n     {win ? <WinnerScreen restartGame={restartGame} playerWon={result.winner} /> : null }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;AACA,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,aAAV,CAAd;AACA,MAAMC,eAAe,GAAG,IAAID,KAAJ,CAAU,WAAV,CAAxB;AACA,MAAME,YAAY,GAAG,IAAIF,KAAJ,CAAU,eAAV,CAArB,C,CAEA;;AACA,MAAMG,SAAS,GAAG,MAAM;EACtBJ,KAAK,CAACK,IAAN;AACD,CAFD;;AAGA,MAAMC,UAAU,GAAG,MAAM;EACvBJ,eAAe,CAACG,IAAhB;AACD,CAFD;;AAGA,MAAME,WAAW,GAAG,MAAM;EACxBJ,YAAY,CAACE,IAAb;AACD,CAFD;;AAIA,SAASG,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,CAAD,CAAlC,CAFa,CAGb;;EACA,MAAK,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,GAAD,CAAnC;EACA,MAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BC,KAAK,CAACpB,QAAN,CAAe,EAAf,CAAlC,CALa,CAMb;;EACA,MAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC;IAAEuB,MAAM,EAAE,MAAV;IAAkBC,KAAK,EAAE;EAAzB,CAAD,CAApC,CAPa,CAQb;;EACA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgB1B,QAAQ,CAAC,KAAD,CAA9B;EAEAC,SAAS,CAAC,MAAM;IAAE;IAChB0B,QAAQ;IACRC,UAAU;;IAEV,IAAIZ,MAAM,KAAK,GAAf,EAAoB;MAClBC,SAAS,CAAC,GAAD,CAAT;IACD,CAFD,MAEO;MACLA,SAAS,CAAC,GAAD,CAAT;IACD;EACF,CATQ,EASN,CAACH,KAAD,CATM,CAAT,CAXa,CAsBb;;EACAb,SAAS,CAAC,MAAM;IAEd,IAAIoB,MAAM,CAACG,KAAP,KAAiB,MAArB,EAA6B;MAC3BE,MAAM,CAAC,IAAD,CAAN;MACAf,UAAU,GAFiB,CAGrB;IACP;EACF,CAPQ,EAON,CAACU,MAAD,CAPM,CAAT,CAvBa,CAgCb;;EACA,MAAMQ,WAAW,GAAGC,MAAD,IAAY;IAC7BrB,SAAS;IACTM,QAAQ,CACND,KAAK,CAACiB,GAAN,CAAU,CAACC,GAAD,EAAMC,GAAN,KAAc;MACtB,IAAIA,GAAG,KAAKH,MAAR,IAAkBE,GAAG,KAAK,EAA9B,EAAkC;QAChC,OAAOhB,MAAP;MACD;;MACD,OAAOgB,GAAP;IACD,CALD,CADM,CAAR;EAQD,CAVD,CAjCa,CA6Cb;;;EACA,MAAML,QAAQ,GAAG,MAAM;IACrBxB,QAAQ,CAAC+B,OAAT,CAAkBC,WAAD,IAAiB;MAChC,MAAMC,WAAW,GAAGtB,KAAK,CAACqB,WAAW,CAAC,CAAD,CAAZ,CAAzB;MACA,IAAIC,WAAW,KAAK,EAApB,EAAwB;MACxB,IAAIC,mBAAmB,GAAG,IAA1B;MACAF,WAAW,CAACD,OAAZ,CAAqBD,GAAD,IAAS;QAC3B,IAAInB,KAAK,CAACmB,GAAD,CAAL,KAAeG,WAAnB,EAAgC;UAC9BC,mBAAmB,GAAG,KAAtB;QACD;MACF,CAJD;;MAMA,IAAIA,mBAAJ,EAAyB;QACvBf,SAAS,CAAC;UAAEC,MAAM,EAAEP,MAAV;UAAkBQ,KAAK,EAAE;QAAzB,CAAD,CAAT;MACD;IACF,CAbD;EAcD,CAfD,CA9Ca,CA+Db;;;EACA,MAAMc,WAAW,GAAG,MAAM;IACxB1B,WAAW;IACXG,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,CAAD,CAAR;IACAE,SAAS,CAAC,GAAD,CAAT;IACAS,MAAM,CAAC,KAAD,CAAN;EACD,CALD,CAhEa,CAuEb;;;EACA,MAAME,UAAU,GAAG,MAAM;IACvB,IAAIW,MAAM,GAAG,IAAb;IACAzB,KAAK,CAACoB,OAAN,CAAeJ,MAAD,IAAY;MACxB,IAAIA,MAAM,KAAK,EAAf,EAAmB;QACjBS,MAAM,GAAG,KAAT;MACD;IACF,CAJD;;IAKA,IAAIA,MAAJ,EAAY;MACVjB,SAAS,CAAC;QAAEC,MAAM,EAAE,QAAV;QAAoBC,KAAK,EAAE;MAA3B,CAAD,CAAT;IACD;EACF,CAVD;;EAYA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACC;MAAK,SAAS,EAAC,OAAf;MAAA,wBACC;QAAI,SAAS,EAAC,OAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAEE;QAAK,SAAS,EAAC,KAAf;QAAA,wBACC,QAAC,MAAD;UACA,YAAY,EAAE,MAAI;YAACK,WAAW,CAAC,CAAD,CAAX;UAAe,CADlC;UAEA,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFV;UAAA;UAAA;UAAA;QAAA,QADD,eAIC,QAAC,MAAD;UACA,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADlC;UAEA,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFV;UAAA;UAAA;UAAA;QAAA,QAJD,eAOC,QAAC,MAAD;UACA,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADlC;UAEA,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFV;UAAA;UAAA;UAAA;QAAA,QAPD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAaE;QAAK,SAAS,EAAC,KAAf;QAAA,wBACA,QAAC,MAAD;UACC,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADnC;UAEC,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFX;UAAA;UAAA;UAAA;QAAA,QADA,eAIC,QAAC,MAAD;UACA,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADlC;UAEA,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFV;UAAA;UAAA;UAAA;QAAA,QAJD,eAOC,QAAC,MAAD;UACA,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADlC;UAEA,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFV;UAAA;UAAA;UAAA;QAAA,QAPD;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF,eAwBE;QAAK,SAAS,EAAC,KAAf;QAAA,wBACA,QAAC,MAAD;UACC,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADnC;UAEC,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFX;UAAA;UAAA;UAAA;QAAA,QADA,eAIC,QAAC,MAAD;UACA,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADlC;UAEA,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFV;UAAA;UAAA;UAAA;QAAA,QAJD,eAOC,QAAC,MAAD;UACA,YAAY,EAAE,MAAI;YAACe,WAAW,CAAC,CAAD,CAAX;UAAe,CADlC;UAEA,GAAG,EAAEf,KAAK,CAAC,CAAD;QAFV;UAAA;UAAA;UAAA;QAAA,QAPD;MAAA;QAAA;QAAA;QAAA;MAAA,QAxBF,eAmCE;QAAA,uBACE;UAAI,SAAS,EAAC,OAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAnCF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,EAuCEW,GAAG,gBAAG,QAAC,YAAD;MAAc,WAAW,EAAEa,WAA3B;MAAwC,SAAS,EAAEjB,MAAM,CAACE;IAA1D;MAAA;MAAA;MAAA;IAAA,QAAH,GAA0E,IAvC/E;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2CD;;GA/HQV,G;;KAAAA,G;AAiIT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}