[{"/Users/kristinedugan/Desktop/tic-tac-toe/src/index.js":"1","/Users/kristinedugan/Desktop/tic-tac-toe/src/App.js":"2","/Users/kristinedugan/Desktop/tic-tac-toe/src/reportWebVitals.js":"3","/Users/kristinedugan/Desktop/tic-tac-toe/src/Component/Square.js":"4","/Users/kristinedugan/Desktop/tic-tac-toe/src/Patterns.js":"5","/Users/kristinedugan/Desktop/tic-tac-toe/src/WinnerScreen.js":"6"},{"size":535,"mtime":1653011201352,"results":"7","hashOfConfig":"8"},{"size":3156,"mtime":1653071397366,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1653011201354,"results":"10","hashOfConfig":"8"},{"size":229,"mtime":1653012144444,"results":"11","hashOfConfig":"8"},{"size":176,"mtime":1653021092008,"results":"12","hashOfConfig":"8"},{"size":570,"mtime":1653070354313,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19jketi",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kristinedugan/Desktop/tic-tac-toe/src/index.js",[],[],"/Users/kristinedugan/Desktop/tic-tac-toe/src/App.js",["34"],[],"import { useState, useEffect } from \"react\";\nimport './App.css';\nimport Square from './Component/Square';\nimport {Patterns} from './Patterns'\nimport WinnerScreen from \"./WinnerScreen\";\n\nfunction App() {\n  //board index for squares\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"])\n  //player turn to ⭕ or ❌\n  const[player, setPlayer] = useState(\"⭕\")\n  //result\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n  // check win\n  const [win, setWin] = useState(false);\n\n  useEffect(() => { // use when board changes\n    checkWin()\n    checkIfTie()\n\n    if (player === \"❌\") {\n      setPlayer(\"⭕\");\n    } else {\n      setPlayer(\"❌\");\n    }\n  }, [board]);\n\n  //render winner\n  useEffect(() => {\n    \n    if (result.state !== \"none\") {\n\n      setWin(true);\n      // alert(`Game Finished! Winning Player: ${result.winner}`);\n    }\n  }, [result]);\n\n  //handle click\n  const handleClick =(square) => {\n    setBoard(\n      board.map((val, idx) => {\n        if (idx === square && val === \"\") {\n          return player; \n        }\n        return val; \n      })\n    );\n  }\n\n  // checking for winner\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer === \"\") return; \n      let foundWinningPattern = true;\n      currPattern.forEach((idx) => {\n        if (board[idx] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: \"Won\" });\n      }\n    });\n  };\n\n  //restart\n  const restartGame = () => {\n    setBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayer(\"⭕\");\n    setWin(false)\n  };\n\n  //check if tie\n  const checkIfTie = () => {\n    let filled = true; \n    board.forEach((square) => {\n      if (square === \"\") {\n        filled = false; \n      }\n    });\n    if (filled) {\n      setResult({ winner: \"No One\", state: \"Tie\" });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n     <div className=\"board\">\n      <h1 className=\"title\">Let's Play<br/>\n      Tic Tac Toe</h1>\n       <div className=\"row\">\n        <Square \n        chooseSquare={()=>{handleClick(0)}}\n        val={board[0]}/>\n        <Square \n        chooseSquare={()=>{handleClick(1)}}\n        val={board[1]}/>\n        <Square \n        chooseSquare={()=>{handleClick(2)}}\n        val={board[2]}/>\n       </div>\n       <div className=\"row\">\n       <Square \n        chooseSquare={()=>{handleClick(3)}}\n        val={board[3]}/>\n        <Square \n        chooseSquare={()=>{handleClick(4)}}\n        val={board[4]}/>\n        <Square \n        chooseSquare={()=>{handleClick(5)}}\n        val={board[5]}/>\n       </div>\n       <div className=\"row\">\n       <Square \n        chooseSquare={()=>{handleClick(6)}}\n        val={board[6]}/>\n        <Square \n        chooseSquare={()=>{handleClick(7)}}\n        val={board[7]}/>\n        <Square \n        chooseSquare={()=>{handleClick(8)}}\n        val={board[8]}/>\n       </div>\n     </div>\n     {win ? <WinnerScreen restartGame={restartGame} playerWon={result.winner} /> : null }\n    </div>\n  );\n}\n\nexport default App;\n","/Users/kristinedugan/Desktop/tic-tac-toe/src/reportWebVitals.js",[],[],"/Users/kristinedugan/Desktop/tic-tac-toe/src/Component/Square.js",[],[],[],"/Users/kristinedugan/Desktop/tic-tac-toe/src/Patterns.js",[],[],"/Users/kristinedugan/Desktop/tic-tac-toe/src/WinnerScreen.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":26,"column":6,"nodeType":"37","endLine":26,"endColumn":13,"suggestions":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIfTie', 'checkWin', and 'player'. Either include them or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [board, checkIfTie, checkWin, player]",{"range":"42","text":"43"},[691,698],"[board, checkIfTie, checkWin, player]"]